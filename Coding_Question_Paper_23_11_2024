ZOHO CODING QUESTION PAPER
---------------------------
MARKS : 40                                                                                            
TIME : 45 MINS
---------------------------
Question - 1
Given a number N, the task is to print the prime numbers from 1 to N.
Examples: 

Input: N = 10
Output: 2, 3, 5, 7
Explanation : The output “2, 3, 5, 7” for input N = 10 represents the list of the prime numbers less than or equal to 10. 

Input: N = 5
Output: 2, 3, 5 
Explanation : The output “2, 3, 5” for input N = 5 represents the list of the prime numbers less than or equal to 5.
---------------------------
Question - 2
Given a number N. Check whether N is a Twisted Prime number or not.
Note: A number is called Twisted Prime if it is a prime and its reverse is also a prime.

Example 1:

Input: N = 97
Output: 1
Explanation: 97 is a prime number. Its 
reverse 79 is also a prime number. Thus 
97 is a  twisted Prime and so, the answer is 1.

Example 2:
Input: N = 43
Output: 0
Explanation: 43 is a prime number but its 
reverse 34 is not a prime.So, 43 is not a 
twisted prime and thus, answer is 0.

Expected Time Complexity:(O(sqrt(max(N,RevN))), here RevN is the reverse of N.
Expected Space Complexity:O(1)

Constraints:
1<=N<=109
---------------------------
Question - 3 
Given two numbers  a and b as interval range, the task is to find the prime numbers in between this interval.

Examples: 
Input : a = 1, b = 10
Output : 2, 3, 5, 7
Input : a = 10, b = 20
Output : 11, 13, 17, 19
---------------------------
Question - 4 
You have given two sorted arrays arr1[] & arr2[] of distinct elements. 
The first array has one element extra added in between. Return the index of the extra element.

Note: 0-based indexing is followed.

Examples
Input: arr1[] = [2,4,6,8,9,10,12], arr2[] = [2,4,6,8,10,12]
Output: 4
Explanation: In the first array, 9 is extra added and its index is 4.

Input: arr1[] = [3,5,7,8,11,13], arr2[] = [3,5,7,11,13]
Output: 3
Explanation: In the first array, 8 is extra and its index is 3.
Input: arr1[] = [3,5], arr2[] = [3]
Output: 1
Explanation: In the first array, 5 is extra and its index is 1.

Constraints:
2<=arr1.size()<=105
1<=arr1[i],arr2[i]<=106
---------------------------
Question - 5 
Given an array arr[]. Push all the zeros of the given array to the right end of the array while maintaining the order of non-zero elements. 
Do the mentioned change in the array in place.

Examples:
Input: arr[] = [1, 2, 0, 4, 3, 0, 5, 0]
Output: [1, 2, 4, 3, 5, 0, 0, 0]
Explanation: There are three 0s that are moved to the end.

Input: arr[] = [10, 20, 30]
Output: [10, 20, 30]
Explanation: No change in array as there are no 0s.

Input: arr[] = [0, 0]
Output: [0, 0]
Explanation: No change in array as there are all 0s.

Constraints:
1 ≤ arr.size() ≤ 105
0 ≤ arr[i] ≤ 105
---------------------------
Question - 6
You are given a sorted array consisting of only integers where every element appears exactly twice, 
except for one element which appears exactly once.

Return the single element that appears only once.

Your solution must run in O(log n) time and O(1) space.

Example 1:
Input: nums = [1,1,2,3,3,4,4,8,8]
Output: 2

Example 2:
Input: nums = [3,3,7,7,10,11,11]
Output: 10

Constraints:
1 <= nums.length <= 105
0 <= nums[i] <= 105
---------------------------
Question - 7
Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it.

You must implement a solution with a linear runtime complexity and use only constant extra space.

Example 1:
Input: nums = [2,2,3,2]
Output: 3

Example 2:
Input: nums = [0,1,0,1,0,1,99]
Output: 99
 
Constraints:
1 <= nums.length <= 3 * 104
-231 <= nums[i] <= 231 - 1

Each element in nums appears exactly three times except for one element which appears once.
---------------------------
Question - 8
You are given a string s consisting of n characters which are either 'X' or 'O'.
A move is defined as selecting three consecutive characters of s and converting them to 'O'. 
Note that if a move is applied to the character 'O', it will stay the same.

Return the minimum number of moves required so that all the characters of s are converted to 'O'.

Example 1:
Input: s = "XXX"
Output: 1
Explanation: XXX -> OOO
We select all the 3 characters and convert them in one move.

Example 2:
Input: s = "XXOX"
Output: 2
Explanation: XXOX -> OOOX -> OOOO
We select the first 3 characters in the first move, and convert them to 'O'.
Then we select the last 3 characters and convert them so that the final string contains all 'O's.

Example 3:
Input: s = "OOOO"
Output: 0
Explanation: There are no 'X's in s to convert.
 
Constraints:
3 <= s.length <= 1000
s[i] is either 'X' or 'O'.
---------------------------

